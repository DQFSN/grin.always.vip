{"version":3,"sources":["assets/logo_title.svg","services/fetch.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","get","url","params","method","interceptors","response","use","res","data","theme","createMuiTheme","palette","primary","main","contrastText","App","state","sticky","footerVisible","activityKey","tagList","navList","fetchData","a","length","setState","e","getTagList","renderNavCard","tag","node","forEach","item","index","indexOf","push","Grid","xs","sm","md","Link","color","href","website","underline","Box","className","display","flexDirection","p","borderRadius","mr","Avatar","name","slice","mb","Typography","variant","style","fontWeight","wordBreak","desc","replace","renderHotCard","tag_en","bgcolor","alignItems","justifyContent","py","px","src","logo","alt","id","container","spacing","renderNavContentCard","filter","map","border","borderTop","borderRight","borderLeft","borderColor","this","hash","window","location","decodeURIComponent","split","addEventListener","document","documentElement","scrollTop","ThemeProvider","CssBaseline","Container","mt","Button","LogoImg","Hidden","mdDown","onClick","flex","open","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df63c8f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_title.d54e704a.svg\";","import axios from 'axios';\n\nconst instance = axios.create();\n\ninstance.interceptors.response.use(res => {\n  return res.data;\n});\n\nexport function get(url, params) {\n  return instance({\n    method: 'get',\n    url,\n    params,\n  });\n}\n","import React from 'react';\nimport {\n  CssBaseline,\n  Container,\n  Box,\n  Typography,\n  Hidden,\n  Grid,\n  Link,\n  Avatar,\n  Button,\n} from '@material-ui/core';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nimport LogoImg from './assets/logo_title.svg';\n\nimport { get } from './services/fetch';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ff7828',\n      contrastText: '#fff',\n    },\n  }\n});\n\nclass App extends React.Component {\n\n  state = {\n    sticky: false,\n    footerVisible: false,\n    activityKey: '热门推荐',\n    tagList: [],\n    navList: [],\n  }\n\n  componentDidMount() {\n    this.getTagList();\n    this.fetchData();\n\n    const { hash } = window.location;\n    if (hash) {\n      this.setState({\n        activityKey: decodeURIComponent(hash.split('#')[1]),\n      });\n    }\n\n    window.addEventListener(\"scroll\", () => {\n      const { sticky } = this.state;\n      if (document.documentElement.scrollTop > 157 && !sticky) {\n        this.setState({\n          sticky: true,\n        });\n      } else if (document.documentElement.scrollTop < 157 && sticky) {\n        this.setState({\n          sticky: false,\n        });\n      }\n    });\n  }\n\n  fetchData = async () => {\n    // const res = await get('/resource.json');\n    const res = await get('https://expo-res.sparkpool.com/SparkPoolOfficial/eth123.org/main/resource.json');\n    if (res && (res || []).length) {\n      try {\n        this.setState({\n          navList: res,\n          footerVisible: true,\n        });\n      } catch (e) {\n      }\n    }\n  }\n\n  getTagList = async (navList) => {\n    // const res = await get('/tagList.json');\n    const res = await get('https://expo-res.sparkpool.com/SparkPoolOfficial/eth123.org/main/tagList.json');\n    if (res && (res || []).length) {\n      this.setState({\n        tagList: res,\n      });\n    }\n  }\n\n  renderNavCard = (tag) => {\n    const { navList } = this.state;\n    let node = [];\n    navList.forEach((item, index) => {\n      if (item.tag.indexOf(tag) > -1) {\n        node.push(\n          <Grid item xs={6} sm={4} md={3} key={index}>\n            <Link\n              color=\"textPrimary\"\n              href={item.website}\n              underline='none'>\n              <Box\n                className='cardItem'\n                display=\"flex\"\n                flexDirection=\"row\"\n                p={1}\n                borderRadius={8}>\n                <Box mr={1}>\n                  <Avatar>{item.name.slice(0, 1)}</Avatar>\n                </Box>\n                <Box>\n                  <Box mb={1}>\n                    <Typography variant=\"body1\" style={{ fontWeight: 500, color: '#333'}}>\n                      {item.name}\n                    </Typography>\n                  </Box>\n                  <Typography variant=\"caption\" style={{ color: '#999', wordBreak: 'break-all' }}>\n                    {item.desc || (item.website || '').replace(/htt(p|ps):\\/\\//, '')}\n                  </Typography>\n                </Box>\n              </Box>\n            </Link>\n          </Grid>\n        )\n      }\n    });\n    return node;\n  }\n\n  renderHotCard = () => {\n    const { navList, tagList } = this.state;\n    let node = [];\n    navList.forEach((item, index) => {\n      if (item.tag_en.indexOf('Home') > -1) {\n        node.push(\n          <Grid item xs={6} sm={4} md={3} key={index}>\n            <Link\n              color=\"textPrimary\"\n              href={item.website}\n              underline='none'>\n              <Box\n                bgcolor=\"white\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                className=\"hotCard\"\n                py={2}\n                px={2}\n                borderRadius={8}\n              >\n                <img\n                  src={item.logo}\n                  alt=\"\"\n                />\n              </Box>\n            </Link>\n          </Grid>\n        )\n      }\n    });\n    return (\n      <Box mb={2} id={(tagList[0] || {}).tag}>\n        <Grid container spacing={2}>\n          {node}\n        </Grid>\n      </Box>\n    );\n  }\n\n  renderNavContentCard = () => {\n    const { tagList } = this.state;\n    return (tagList || []).filter((item) => item.tag_en !== 'Home').map(({ tag, tag_en}) => (\n      <Box\n        bgcolor=\"white\"\n        borderRadius={16}\n        mb={2}\n        key={tag}\n        id={tag}\n        px={3}\n      >\n        <Box\n          py={2}\n          border={1}\n          borderTop={0}\n          borderRight={0}\n          borderLeft={0}\n          borderColor=\"grey.100\"\n        >\n          <Typography>{tag}</Typography>\n        </Box>\n        <Box py={3}>\n          <Grid container spacing={1}>\n            { this.renderNavCard(tag) }\n          </Grid>\n        </Box>\n      </Box>\n    ))\n  }\n\n  render() {\n\n    const { tagList, sticky, footerVisible, activityKey } = this.state;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container>\n          <Box mt={2} display=\"flex\" flexDirection=\"column\" alignItems=\"flex-end\">\n            <Button>简体中文</Button>\n          </Box>\n          <Box mb={4} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <Box mb={1}>\n              <img src={LogoImg} alt=\"eth123\" />\n            </Box>\n            <Box>\n              <Typography color=\"textSecondary\">\n                -- 以太坊生态项目导航 --\n              </Typography>\n            </Box>\n          </Box>\n          <Box display=\"flex\" flexDirection=\"row\">\n            <Hidden mdDown>\n              <Box\n                mr={2}\n                px={1}\n                className={sticky ? \"tagNav tagNav_fixed\" : \"tagNav\"}\n                id=\"tagNav\">\n                {\n                  (tagList || []).map(({ tag, tag_en }, index) => (\n                    <Link\n                      color=\"textPrimary\"\n                      href={`#${tag}`}\n                      key={tag}\n                      className={ activityKey === tag ? \"tagLink tagLink_active\" : 'tagLink'}\n                      underline=\"none\"\n                      onClick={() => {\n                        this.setState({\n                          activityKey: tag,\n                        });\n                      }}\n                      >\n                        <Box py={1} px={2}>{tag}</Box>\n                      </Link>\n                    ))\n                  }\n                </Box>\n                <Box flex={1}></Box>\n            </Hidden>\n            <Box className=\"tagContent\">\n              {this.renderHotCard()}\n              {this.renderNavContentCard()}\n            </Box>\n          </Box>\n        </Container>\n        {\n          footerVisible ? (\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              className=\"footer\"\n              py={4}>\n              <Box mb={3}>\n                <Typography variant=\"h5\" className=\"footer_title\">\n                  一起发现更多新产品\n                </Typography>\n              </Box>\n              <Button\n                variant=\"contained\"\n                className=\"submitBtn\"\n                color=\"primary\"\n                onClick={() => {\n                  window.open('https://github.com/SparkPoolOfficial/eth123.org/issues');\n                }}\n                >\n                提交\n              </Button>\n            </Box>\n          ) : null\n        }\n      </ThemeProvider>\n    );\n\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}