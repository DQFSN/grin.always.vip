{"version":3,"sources":["assets/logo_title.svg","services/fetch.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","get","url","params","method","interceptors","response","use","res","data","theme","createMuiTheme","palette","primary","main","contrastText","translation","zh","subTitle","more","submit","en","App","state","sticky","footerVisible","activityKey","tagList","navList","language","fetchData","a","length","setState","e","getTagList","translate","key","renderDesc","item","desc","desc_en","website","replace","slice","renderHotCard","node","forEach","index","tag_en","indexOf","push","Grid","xs","sm","md","Link","color","href","underline","Box","bgcolor","display","flexDirection","alignItems","justifyContent","className","py","px","borderRadius","src","logo","alt","mb","id","tag","container","spacing","renderNavContentCard","map","tagName","border","borderTop","borderRight","borderLeft","borderColor","Typography","renderNavCard","target","p","mr","Avatar","style","height","logoHeightAuto","width","logoWidthAuto","name","name_en","variant","fontWeight","lineHeight","wordBreak","this","hash","window","location","decodeURIComponent","split","addEventListener","document","documentElement","scrollTop","t","ThemeProvider","CssBaseline","Container","mt","Button","onClick","LogoImg","Hidden","mdDown","flex","open","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d4578804.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_title.d54e704a.svg\";","import axios from 'axios';\n\nconst instance = axios.create();\n\ninstance.interceptors.response.use(res => {\n  return res.data;\n});\n\nexport function get(url, params) {\n  return instance({\n    method: 'get',\n    url,\n    params,\n  });\n}\n","import React from 'react';\nimport {\n  CssBaseline,\n  Container,\n  Box,\n  Typography,\n  Hidden,\n  Grid,\n  Link,\n  Avatar,\n  Button,\n} from '@material-ui/core';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nimport LogoImg from './assets/logo_title.svg';\n\nimport { get } from './services/fetch';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ff7828',\n      contrastText: '#fff',\n    },\n  }\n});\n\nconst translation = {\n  zh: {\n    subTitle: '以太坊生态项目导航',\n    more: '一起发现更多新产品',\n    submit: '提交',\n  },\n  en: {\n    subTitle: 'A Portal to Ethereum Ecosystem',\n    more: 'Discover more new products',\n    submit: 'Submit',\n  }\n}\n\nclass App extends React.Component {\n\n  state = {\n    sticky: false,\n    footerVisible: false,\n    activityKey: 'Hot',\n    tagList: [],\n    navList: [],\n\n    language: 'zh',\n  }\n\n  componentDidMount() {\n    this.getTagList();\n    this.fetchData();\n\n    const { hash } = window.location;\n    if (hash) {\n      this.setState({\n        activityKey: decodeURIComponent(hash.split('#')[1]),\n      });\n    }\n\n    window.addEventListener(\"scroll\", () => {\n      const { sticky } = this.state;\n      if (document.documentElement.scrollTop > 157 && !sticky) {\n        this.setState({\n          sticky: true,\n        });\n      } else if (document.documentElement.scrollTop < 157 && sticky) {\n        this.setState({\n          sticky: false,\n        });\n      }\n    });\n  }\n\n  fetchData = async () => {\n    // const res = await get('/resource.json');\n    const res = await get('https://expo-res.sparkpool.com/SparkPoolOfficial/eth123.org/main/resource.json');\n    if (res && (res || []).length) {\n      try {\n        this.setState({\n          navList: res,\n          footerVisible: true,\n        });\n      } catch (e) {\n      }\n    }\n  }\n\n  getTagList = async (navList) => {\n    // const res = await get('/tagList.json');\n    const res = await get('https://expo-res.sparkpool.com/SparkPoolOfficial/eth123.org/main/tagList.json');\n    if (res && (res || []).length) {\n      this.setState({\n        tagList: res,\n      });\n    }\n  }\n\n  translate = (key) => {\n    const { language } = this.state;\n    return translation[language][key];\n  }\n\n  renderDesc = (item) => {\n    const { language } = this.state;\n    const { desc, desc_en, website } = item;\n    if (language === 'zh' && desc) {\n      return desc;\n    } else if (language === 'en' && desc_en) {\n      return desc_en;\n    }\n    let url = (website || '').replace(/htt(p|ps):\\/\\//, '');\n    if (url.slice('-1') === '/') {\n      url = url.slice(0, url.length - 1);\n    }\n    return url;\n  }\n\n  renderHotCard = () => {\n    const { navList, tagList } = this.state;\n    let node = [];\n    navList.forEach((item, index) => {\n      if (item.tag_en.indexOf('Hot') > -1) {\n        node.push(\n          <Grid item xs={6} sm={4} md={3} key={index}>\n            <Link\n              color=\"textPrimary\"\n              href={item.website}\n              underline='none'>\n              <Box\n                bgcolor=\"white\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                className=\"hotCard\"\n                py={2}\n                px={2}\n                borderRadius={8}\n              >\n                <img\n                  src={item.logo}\n                  alt=\"\"\n                />\n              </Box>\n            </Link>\n          </Grid>\n        )\n      }\n    });\n    return (\n      <Box mb={2} id={(tagList[0] || {}).tag}>\n        <Grid container spacing={2}>\n          {node}\n        </Grid>\n      </Box>\n    );\n  }\n\n  renderNavContentCard = () => {\n    const { tagList, language } = this.state;\n    // return (tagList || []).filter((item) => item.tag_en !== 'Home').map(({ tag, tag_en}) => (\n    return (tagList || []).map((item) => {\n      let tagName = language === 'zh' ? item.tag : item.tag_en;\n      return (\n        <Box\n          bgcolor=\"white\"\n          borderRadius={16}\n          mb={2}\n          key={tagName}\n          id={item.tag_en}\n          px={3}\n        >\n          <Box\n            py={2}\n            border={1}\n            borderTop={0}\n            borderRight={0}\n            borderLeft={0}\n            borderColor=\"grey.100\"\n          >\n            <Typography>{tagName}</Typography>\n          </Box>\n          <Box py={3}>\n            <Grid container spacing={1}>\n              { this.renderNavCard(tagName) }\n            </Grid>\n          </Box>\n        </Box>\n      )\n    })\n  }\n\n  renderNavCard = (tag) => {\n    const { navList, language } = this.state;\n    let node = [];\n    (navList || []).forEach((item, index) => {\n      let tagName = language === 'zh' ? item.tag : item.tag_en;\n      if (tagName.indexOf(tag) > -1) {\n        node.push(\n          <Grid item xs={6} sm={4} md={3} key={index}>\n            <Link\n              color=\"textPrimary\"\n              href={`${item.website}?utm_resource=eth123.org`}\n              target=\"_blank\"\n              underline='none'>\n              <Box\n                className='cardItem'\n                display=\"flex\"\n                flexDirection=\"row\"\n                p={1}\n                borderRadius={8}>\n                <Box mr={1}>\n                  {\n                    item.logo ? (\n                      <Avatar style={{ height: item.logoHeightAuto ? 'auto' : 30, width: item.logoWidthAuto ? 'auto' : 30 }} src={item.logo} />\n                    ) : (\n                      <Avatar style={{ height: 30, width: 30 }}>\n                        {(language === 'zh' ? item.name : (item.name_en || item.name)).slice(0, 1)}\n                      </Avatar>\n                    )\n                  }\n                </Box>\n                <Box>\n                  <Box\n                    display=\"flex\"\n                    flexDirection=\"row\"\n                    alignItems=\"center\"\n                    style={{ height: 30 }}>\n                    <Typography\n                      variant=\"body1\"\n                      className=\"cardItem_title\"\n                      style={{ fontWeight: 500 }}>\n                      {language === 'zh' ? item.name : (item.name_en || item.name)}\n                    </Typography>\n                  </Box>\n                  <Box style={{ lineHeight: '20px' }}>\n                    <Typography\n                      variant=\"caption\"\n                      style={{ color: '#999', wordBreak: 'break-all' }}>\n                      {this.renderDesc(item)}\n                    </Typography>\n                  </Box>\n                </Box>\n              </Box>\n            </Link>\n          </Grid>\n        )\n      }\n    });\n    return node;\n  }\n\n  render() {\n\n    const {\n      tagList,\n      sticky,\n      footerVisible,\n      activityKey,\n      language,\n    } = this.state;\n\n    const t = this.translate;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container>\n          <Box mt={2} display=\"flex\" flexDirection=\"column\" alignItems=\"flex-end\">\n            <Button\n              onClick={() => {\n                this.setState({\n                  language: language === 'zh' ? 'en' : 'zh',\n                })\n              }}>\n              {\n                language === \"zh\" ? 'English' : '简体中文'\n              }\n            </Button>\n          </Box>\n          <Box mb={4} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <Box mb={1}>\n              <img src={LogoImg} alt=\"eth123\" />\n            </Box>\n            <Box>\n              <Typography color=\"textSecondary\">\n                -- {t('subTitle')} --\n              </Typography>\n            </Box>\n          </Box>\n          <Box display=\"flex\" flexDirection=\"row\">\n            <Hidden mdDown>\n              <Box\n                px={1}\n                className={sticky ? \"tagNav tagNav_fixed\" : \"tagNav\"}\n                id=\"tagNav\">\n                {\n                  (tagList || []).map(({ tag, tag_en }, index) => {\n                    let tagName = language === 'zh' ? tag : tag_en;\n                    return (\n                      <Link\n                        color=\"textPrimary\"\n                        href={`#${tag_en}`}\n                        key={tagName}\n                        className={ activityKey === tag_en ? \"tagLink tagLink_active\" : 'tagLink'}\n                        underline=\"none\"\n                        onClick={() => {\n                          this.setState({\n                            activityKey: tag_en,\n                          });\n                        }}\n                        >\n                          <Box py={1} px={2}>{tagName}</Box>\n                        </Link>\n                      )\n                  })\n                  }\n                </Box>\n                <Box flex={1}></Box>\n            </Hidden>\n            <Box className=\"tagContent\">\n              {this.renderNavContentCard()}\n            </Box>\n          </Box>\n        </Container>\n        {\n          footerVisible ? (\n            <Box>\n              <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                alignItems=\"center\"\n                className=\"footer\"\n                py={4}>\n                <Box mb={3}>\n                  <Typography variant=\"h5\" className=\"footer_title\">\n                    {t('more')}\n                  </Typography>\n                </Box>\n                <Button\n                  variant=\"contained\"\n                  className=\"submitBtn\"\n                  color=\"primary\"\n                  onClick={() => {\n                    window.open('https://github.com/SparkPoolOfficial/eth123.org/issues');\n                  }}\n                  >\n                  {t('submit')}\n                </Button>\n              </Box>\n              <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" py={2}>\n                <Box>Sponsored By&nbsp;</Box>\n                <Box color=\"#ff7828\">\n                  <Link href=\"https://www.sparkpool.com\" underline=\"none\">\n                    SparkPool\n                  </Link>\n                </Box>\n              </Box>\n            </Box>\n          ) : null\n        }\n      </ThemeProvider>\n    );\n\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}