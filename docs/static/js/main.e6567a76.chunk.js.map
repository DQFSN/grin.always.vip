{"version":3,"sources":["services/fetch.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","get","url","params","method","interceptors","response","use","res","data","theme","createMuiTheme","App","state","tagList","navList","fetchData","a","length","getTagList","setState","e","back","forEach","item","tags","split","tag","indexOf","push","renderNavCard","node","index","Grid","xs","Link","color","href","website","underline","Box","className","display","flexDirection","p","borderRadius","mr","src","logo","alt","height","Typography","name","desc","this","ThemeProvider","CssBaseline","Container","mt","alignItems","Select","value","MenuItem","m","variant","map","py","px","flex","bgcolor","mb","id","border","borderTop","borderRight","borderLeft","borderColor","container","spacing","Button","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6567a76.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create();\n\ninstance.interceptors.response.use(res => {\n  return res.data;\n});\n\nexport function get(url, params) {\n  return instance({\n    method: 'get',\n    url,\n    params,\n  });\n}\n","import React from 'react';\nimport {\n  CssBaseline,\n  Container,\n  Box,\n  Select,\n  MenuItem,\n  Typography,\n  Grid,\n  Link,\n  Button,\n} from '@material-ui/core';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nimport { get } from './services/fetch';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n\n});\n\nclass App extends React.Component {\n\n  state = {\n    tagList: [],\n    navList: [],\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    const res = await get('/resource.json');\n    if (res && (res || []).length) {\n      try {\n        const tagList = this.getTagList(res);\n        this.setState({\n          navList: res,\n          tagList,\n        });\n      } catch (e) {\n      }\n    }\n  }\n\n  getTagList = (navList) => {\n    let back = [];\n    navList.forEach((item) => {\n      if (item.tags) {\n        item.tags.split(',').forEach(tag => {\n          if (back.indexOf(tag) < 0) {\n            back.push(tag);\n          }\n        });\n      }\n    });\n    return back;\n  }\n\n  renderNavCard = (tag) => {\n    const { navList } = this.state;\n    let node = [];\n    navList.forEach((item, index) => {\n      if (item.tags.indexOf(tag) > -1) {\n        node.push(\n          <Grid item xs={3} key={index}>\n            <Link\n              color=\"textPrimary\"\n              href={item.website}\n              underline='none'>\n              <Box\n                className='cardItem'\n                display=\"flex\"\n                flexDirection=\"row\"\n                p={1}\n                // bgcolor=\"grey.500\"\n                borderRadius={8}>\n                <Box mr={1}>\n                  <img src={item.logo} alt=\"\" height={30} />\n                </Box>\n                <Box>\n                  <Typography>{item.name}</Typography>\n                  <Typography>{item.desc}</Typography>\n                </Box>\n              </Box>\n            </Link>\n          </Grid>\n        )\n      }\n    });\n    return node;\n  }\n\n  render() {\n\n    const { tagList } = this.state;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container>\n          <Box mt={3} display=\"flex\" flexDirection=\"column\" alignItems=\"flex-end\">\n            <Select value=\"zh\">\n              <MenuItem value=\"zh\">简体中文</MenuItem>\n              <MenuItem value=\"en\">English</MenuItem>\n            </Select>\n          </Box>\n          <Box m={2} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <Typography variant=\"h3\">\n              ETH123.org\n            </Typography>\n            <Typography>\n              以太坊生态项目导航\n            </Typography>\n          </Box>\n          <Box display=\"flex\" flexDirection=\"row\">\n            <Box mr={2}>\n              {\n                (tagList || []).map((tag) => (\n                  <Link\n                    color=\"textPrimary\"\n                    href={`#${tag}`}\n                    key={tag}\n                    className=\"tagLink\"\n                    underline=\"none\"\n                  >\n                    <Box py={1} px={2}>{tag}</Box>\n                  </Link>\n                ))\n              }\n            </Box>\n            <Box flex={1}>\n              {\n                (tagList || []).map((tag) => (\n                  <Box\n                    bgcolor=\"white\"\n                    borderRadius={16}\n                    mb={2}\n                    key={tag}\n                    id={tag}\n                    px={3}\n                  >\n                    <Box\n                      py={2}\n                      border={1}\n                      borderTop={0}\n                      borderRight={0}\n                      borderLeft={0}\n                      borderColor=\"grey.100\"\n                    >\n                      <Typography>{tag}</Typography>\n                    </Box>\n                    <Box py={3}>\n                      <Grid container spacing={1}>\n                        { this.renderNavCard(tag) }\n                      </Grid>\n                    </Box>\n                  </Box>\n                ))\n              }\n            </Box>\n          </Box>\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={2} mb={5}>\n            <Box mb={1}>\n              <Typography>一起发现更多新产品</Typography>\n            </Box>\n            <Button variant=\"contained\" color=\"primary\">提交</Button>\n          </Box>\n        </Container>\n      </ThemeProvider>\n    );\n\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}